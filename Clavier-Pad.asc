Rem ===============================================
Rem = Routine d'exemple de gestion de clavier/pad =
Rem ===============================================
Rem = Auteur .......... : Jean Monos              =  
Rem = Version ......... : V1.00 du 14/05/17       =
Rem = Licence ......... : CCO                     =
Rem = Langage ......... : Basic Amos Pro          =
Rem ===============================================

' Exemple de gestion du clavier avec Key State() et du pad 

Rem -------------------------
Rem - Valeur de V_DIRECTION -
Rem -------------------------
' 8 => Haut  
' 2 => Bas 
' 6 => Droite  
' 4 => Gauche  

Rem ---------------------------  
Rem - Valeur de V_TYPE_ENTREE -  
Rem ---------------------------
' 0 => Clavier 
' 1 => Pad 

V_TYPE_ENTREE=0

Rem -------------------
Rem - Valeur V_ACTION -
Rem -------------------
' ------------------------------------------------ 
' Touche "A" pour un AZERTY et "Q" pour un QWERTY
' La gachette pour le PAD
' -----------------------------------------------  
' 0 => Action Off  
' 1 => Action On 

Rem -------------------------------------
Rem - Gestion de l'écran pour l'exemple -
Rem - -----------------------------------

Screen Open 0,320,256,16,Lowres
Curs Off : Flash Off : Paper 0 : Cls 

Rem ---------------------------------- 
Rem - Boucle principale du programme - 
Rem ---------------------------------- 

While(V_QUIT=0)

   P_ENTREE
   P_AFF
   
   Wait Vbl 
Wend 

End 


Rem ****************************** 
Rem * Les Procedure du programme * 
Rem ****************************** 

Rem ---------------------- 
Rem - Procedure d'entree - 
Rem ---------------------- 

Procedure P_ENTREE
   
   Rem =============================
   Rem =Récupération des variables =  
   Rem =============================
   
   Shared V_DIRECTION,V_TYPE_ENTREE,V_ACTION,V_QUIT
   
   Rem ====================== 
   Rem = Gestion du clavier =   
   Rem ====================== 
   
   If V_TYPE_ENTREE=0
      
      Rem ------------------------------------------------ 
      Rem - Gestion de la des touches fléchés du clavier - 
      Rem ------------------------------------------------ 
      If Key State(76)
         V_DIRECTION=8
      Else If Key State(77)
         V_DIRECTION=2
      Else If Key State(78)
         V_DIRECTION=6
      Else If Key State(79)
         V_DIRECTION=4
      Else V_DIRECTION=0
         
      End If 
      
      Rem -----------------------------------------------------
      Rem - Gestion de la touche A/Q du clavier pour l'action -
      Rem -----------------------------------------------------
      If Key State(16)
         V_ACTION=1
      Else 
         V_ACTION=0
      End If 
      
   End If 
   
   Rem ========================== 
   Rem = Gestion du jostick (1) = 
   Rem ========================== 
   
   If V_TYPE_ENTREE=1
      
      Rem -----------------------------------------------
      Rem - Gestion des directions du Joystick/Game pad -
      Rem -----------------------------------------------      
      
      If Jleft(1)
         V_DIRECTION=4
      Else If Jright(1)
         V_DIRECTION=6
      Else If Jup(1)
         V_DIRECTION=8
      Else If Jdown(1)
         V_DIRECTION=2
      Else 
         V_DIRECTION=0
      End If 
      
      Rem -------------------------  
      Rem - Gestion du bouton feu -  
      Rem -------------------------  
      If Fire(1)
         V_ACTION=1
      Else 
         V_ACTION=0
      End If 

   End If 
   
   
   Rem ============================================ 
   Rem = Gestion de la touche Echape pour quitter = 
   Rem ============================================ 
   
   If Key State(69)=True
      V_QUIT=1
   End If 
   
End Proc

Rem -------------------------
Rem - Procedure d'affichage -
Rem -------------------------

Procedure P_AFF
   
   Rem =============================
   Rem =Récupération des variables =  
   Rem =============================
   Shared V_DIRECTION,V_ACTION
   
   Rem ============== 
   Rem = Affichache = 
   Rem ============== 
   Locate 0,0
   Print "Direction"
   Locate 0,1 : Cline 
   Print V_DIRECTION
   Locate 0,2
   Print "Action"
   Locate 0,3 : Cline 
   Print V_ACTION
End Proc
